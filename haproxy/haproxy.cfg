# global
#         log /dev/log    local0
#         log /dev/log    local1 notice
#         chroot /var/lib/haproxy
#         stats socket /run/haproxy/admin.sock mode 660 level admin
#         stats timeout 30s
#         user haproxy
#         group haproxy
#         daemon

#         # Default SSL material locations
#         ca-base /etc/ssl/certs
#         crt-base /etc/ssl/private

#         # See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
#         ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
#         ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
#         ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

# defaults
#         log     global
#         mode    http
#         option  httplog
#         option  dontlognull
#         timeout connect 5000
#         timeout client  50000
#         timeout server  50000
#         errorfile 400 /etc/haproxy/errors/400.http
#         errorfile 403 /etc/haproxy/errors/403.http
#         errorfile 408 /etc/haproxy/errors/408.http
#         errorfile 500 /etc/haproxy/errors/500.http
#         errorfile 502 /etc/haproxy/errors/502.http
#         errorfile 503 /etc/haproxy/errors/503.http
#         errorfile 504 /etc/haproxy/errors/504.http



# Global settings
#---------------------------------------------------------------------
global
    maxconn     20000
    log         /dev/log local0 info
    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    log                     global
    mode                    http
    option                  httplog
    option                  dontlognull
    option http-server-close
    option redispatch
    option forwardfor       except 127.0.0.0/8
    retries                 3
    maxconn                 20000
    timeout http-request    10000ms
    timeout http-keep-alive 10000ms
    timeout check           10000ms
    timeout connect         40000ms
    timeout client          300000ms
    timeout server          300000ms
    timeout queue           50000ms

# Enable HAProxy stats
listen stats
    bind :9000
    stats uri /stats
    stats refresh 10000ms

# # Kube API Server
# frontend k8s_api_frontend
#     bind :6443
#     default_backend k8s_api_backend
#     mode tcp

# backend k8s_api_backend
#     mode tcp
#     balance source
#     server      ocp-bootstrap 192.168.22.200:6443 check
#     server      ocp-cp-1 192.168.22.201:6443 check
#     server      ocp-cp-2 192.168.22.202:6443 check
#     server      ocp-cp-3 192.168.22.203:6443 check

# # OCP Machine Config Server
# frontend ocp_machine_config_server_frontend
#     mode tcp
#     bind :22623
#     default_backend ocp_machine_config_server_backend

# backend ocp_machine_config_server_backend
#     mode tcp
#     balance source
#     server      ocp-bootstrap 192.168.22.200:22623 check
#     server      ocp-cp-1 192.168.22.201:22623 check
#     server      ocp-cp-2 192.168.22.202:22623 check
#     server      ocp-cp-3 192.168.22.203:22623 check

# # OCP Ingress - layer 4 tcp mode for each. Ingress Controller will handle layer 7.
# frontend ocp_http_ingress_frontend
#     bind :80
#     default_backend ocp_http_ingress_backend
#     mode tcp

# backend ocp_http_ingress_backend
#     balance source
#     mode tcp
#     server      ocp-w-1 192.168.22.211:80 check
#     server      ocp-w-2 192.168.22.212:80 check

# frontend ocp_https_ingress_frontend
#     bind *:443
#     default_backend ocp_https_ingress_backend
#     mode tcp

# backend ocp_https_ingress_backend
#     mode tcp
#     balance source
#     server      ocp-w-1 192.168.22.211:443 check
#     server      ocp-w-2 192.168.22.212:443 check